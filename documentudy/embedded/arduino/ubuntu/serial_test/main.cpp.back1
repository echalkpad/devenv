#include <Arduino.h>
#include <SoftwareSerial.h>
#define BAUD_RATE	115200

#if 0
void setup()
{
	// Open serial communications and wait for port to open:
	Serial.begin(BAUD_RATE);
	while (!Serial) {
		; // wait for serial port to connect. Needed for Leonardo only
	}

	Serial.println("Goodnight moon!");
}

void loop() // run over and over
{
	if (mySerial.available())
		Serial.write(mySerial.read());
	if (Serial.available())
		mySerial.write(Serial.read());
}

int main(void) {
	init();
	setup();
	for (;;) {
		loop();
	}
}
#endif

/*
   Serial Event example

   When new serial data arrives, this sketch adds it to a String.
   When a newline is received, the loop prints the string and 
   clears it.

   A good test for this is to try it with a GPS receiver 
   that sends out NMEA 0183 sentences. 

   Created 9 May 2011
   by Tom Igoe

   This example code is in the public domain.

http://www.arduino.cc/en/Tutorial/SerialEvent

 */

String inputString = "";         // a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete
int s32Temp = 9148;


void setup() {
	// initialize serial:
	Serial.begin(BAUD_RATE);
	// reserve 200 bytes for the inputString:
	inputString.reserve(200);
	inputString = "intput key : ";
}

void loop() {
	// print the string when a newline arrives:
	if (stringComplete) {
		Serial.println(inputString); 
		// clear the string:
		inputString = "intput key : ";
		stringComplete = false;
	}

	//처음 통신테스트 할 때 출력확인용 
	//delay(1000);
	//Serial.println("Test OK");
}

/*
   SerialEvent occurs whenever a new data comes in the
   hardware serial RX.  This routine is run between each
   time loop() runs, so using delay inside loop can delay
   response.  Multiple bytes of data may be available.
 */
void serialEvent() {
	while (Serial.available()) {
		// get the new byte:
		char inChar = (char)Serial.read(); 
		// add it to the inputString:
		inputString += inChar;
		// if the incoming character is a newline, set a flag
		// so the main loop can do something about it:


		//case1
		//"Carrige return" 일 경우에는, '\r'
		if (inChar == '\r') {
			stringComplete = true;
		} 


		/*
		//case2 
		//"NewLine" 일 경우에는, '\n'
		if (inChar == '\n') {
		stringComplete = true;
		}
		 */ 
	}
}

int main(void) {
	init();
	setup();
	for (;;) {
		loop();
	}
}
//blog.naver.com/bringblingme 

